// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vehicle_notification.proto

package packets

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NotificationByID struct {
	IdNotificacion       string   `protobuf:"bytes,1,opt,name=IdNotificacion,proto3" json:"IdNotificacion,omitempty"`
	Imei                 string   `protobuf:"bytes,2,opt,name=Imei,proto3" json:"Imei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotificationByID) Reset()         { *m = NotificationByID{} }
func (m *NotificationByID) String() string { return proto.CompactTextString(m) }
func (*NotificationByID) ProtoMessage()    {}
func (*NotificationByID) Descriptor() ([]byte, []int) {
	return fileDescriptor_06cf361e0775fa31, []int{0}
}

func (m *NotificationByID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationByID.Unmarshal(m, b)
}
func (m *NotificationByID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationByID.Marshal(b, m, deterministic)
}
func (m *NotificationByID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationByID.Merge(m, src)
}
func (m *NotificationByID) XXX_Size() int {
	return xxx_messageInfo_NotificationByID.Size(m)
}
func (m *NotificationByID) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationByID.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationByID proto.InternalMessageInfo

func (m *NotificationByID) GetIdNotificacion() string {
	if m != nil {
		return m.IdNotificacion
	}
	return ""
}

func (m *NotificationByID) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

type GetNotificationRequest struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNotificationRequest) Reset()         { *m = GetNotificationRequest{} }
func (m *GetNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*GetNotificationRequest) ProtoMessage()    {}
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06cf361e0775fa31, []int{1}
}

func (m *GetNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNotificationRequest.Unmarshal(m, b)
}
func (m *GetNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNotificationRequest.Marshal(b, m, deterministic)
}
func (m *GetNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNotificationRequest.Merge(m, src)
}
func (m *GetNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_GetNotificationRequest.Size(m)
}
func (m *GetNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNotificationRequest proto.InternalMessageInfo

func (m *GetNotificationRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendNotificationRequest struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendNotificationRequest) Reset()         { *m = SendNotificationRequest{} }
func (m *SendNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*SendNotificationRequest) ProtoMessage()    {}
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06cf361e0775fa31, []int{2}
}

func (m *SendNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendNotificationRequest.Unmarshal(m, b)
}
func (m *SendNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendNotificationRequest.Marshal(b, m, deterministic)
}
func (m *SendNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendNotificationRequest.Merge(m, src)
}
func (m *SendNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_SendNotificationRequest.Size(m)
}
func (m *SendNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendNotificationRequest proto.InternalMessageInfo

func (m *SendNotificationRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type OutputNotification struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputNotification) Reset()         { *m = OutputNotification{} }
func (m *OutputNotification) String() string { return proto.CompactTextString(m) }
func (*OutputNotification) ProtoMessage()    {}
func (*OutputNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_06cf361e0775fa31, []int{3}
}

func (m *OutputNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputNotification.Unmarshal(m, b)
}
func (m *OutputNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputNotification.Marshal(b, m, deterministic)
}
func (m *OutputNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputNotification.Merge(m, src)
}
func (m *OutputNotification) XXX_Size() int {
	return xxx_messageInfo_OutputNotification.Size(m)
}
func (m *OutputNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputNotification.DiscardUnknown(m)
}

var xxx_messageInfo_OutputNotification proto.InternalMessageInfo

func (m *OutputNotification) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OutputNotification) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type DismissAbnormal struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Imei                 string   `protobuf:"bytes,2,opt,name=Imei,proto3" json:"Imei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DismissAbnormal) Reset()         { *m = DismissAbnormal{} }
func (m *DismissAbnormal) String() string { return proto.CompactTextString(m) }
func (*DismissAbnormal) ProtoMessage()    {}
func (*DismissAbnormal) Descriptor() ([]byte, []int) {
	return fileDescriptor_06cf361e0775fa31, []int{4}
}

func (m *DismissAbnormal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DismissAbnormal.Unmarshal(m, b)
}
func (m *DismissAbnormal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DismissAbnormal.Marshal(b, m, deterministic)
}
func (m *DismissAbnormal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DismissAbnormal.Merge(m, src)
}
func (m *DismissAbnormal) XXX_Size() int {
	return xxx_messageInfo_DismissAbnormal.Size(m)
}
func (m *DismissAbnormal) XXX_DiscardUnknown() {
	xxx_messageInfo_DismissAbnormal.DiscardUnknown(m)
}

var xxx_messageInfo_DismissAbnormal proto.InternalMessageInfo

func (m *DismissAbnormal) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DismissAbnormal) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func init() {
	proto.RegisterType((*NotificationByID)(nil), "packets.NotificationByID")
	proto.RegisterType((*GetNotificationRequest)(nil), "packets.GetNotificationRequest")
	proto.RegisterType((*SendNotificationRequest)(nil), "packets.SendNotificationRequest")
	proto.RegisterType((*OutputNotification)(nil), "packets.OutputNotification")
	proto.RegisterType((*DismissAbnormal)(nil), "packets.DismissAbnormal")
}

func init() { proto.RegisterFile("vehicle_notification.proto", fileDescriptor_06cf361e0775fa31) }

var fileDescriptor_06cf361e0775fa31 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xc1, 0x4f, 0xf2, 0x40,
	0x10, 0xc5, 0x3f, 0x1a, 0x3e, 0x0c, 0x83, 0x41, 0xb3, 0x31, 0x08, 0xf5, 0x20, 0xf6, 0x60, 0x38,
	0x2d, 0x09, 0xc6, 0x93, 0x27, 0x2a, 0x09, 0x69, 0x62, 0x30, 0x96, 0xe8, 0x81, 0x68, 0xcc, 0xd2,
	0x5d, 0x70, 0x23, 0xec, 0x22, 0xbb, 0x35, 0xe9, 0xbf, 0xee, 0xc9, 0xb8, 0xb4, 0x0d, 0x94, 0x9a,
	0x1e, 0xbc, 0xb5, 0x33, 0xef, 0xfd, 0xf2, 0xfa, 0xa6, 0x60, 0x7f, 0xb2, 0x37, 0x1e, 0x2c, 0xd8,
	0xab, 0x90, 0x9a, 0xcf, 0x78, 0x40, 0x34, 0x97, 0x02, 0xaf, 0xd6, 0x52, 0x4b, 0x74, 0xb0, 0x22,
	0xc1, 0x3b, 0xd3, 0xca, 0x6e, 0xcd, 0xa5, 0x9c, 0x2f, 0x58, 0xd7, 0x8c, 0xa7, 0xe1, 0xac, 0x4b,
	0x44, 0xb4, 0xd1, 0x38, 0x23, 0x38, 0x1e, 0x6d, 0x39, 0xdd, 0xc8, 0x1b, 0xa0, 0x4b, 0xa8, 0x7b,
	0x34, 0x99, 0x06, 0x5c, 0x8a, 0x66, 0xa9, 0x5d, 0xea, 0x54, 0xfd, 0xcc, 0x14, 0x21, 0x28, 0x7b,
	0x4b, 0xc6, 0x9b, 0x96, 0xd9, 0x9a, 0x67, 0xc7, 0x85, 0xc6, 0x90, 0xe9, 0x6d, 0xa4, 0xcf, 0x3e,
	0x42, 0xa6, 0x34, 0xea, 0x40, 0x79, 0x40, 0x34, 0x31, 0xac, 0x5a, 0xef, 0x04, 0x6f, 0x32, 0xe1,
	0x24, 0x13, 0xee, 0x8b, 0xc8, 0x37, 0x0a, 0xe7, 0x16, 0x4e, 0xc7, 0x4c, 0xd0, 0xbf, 0x41, 0x9e,
	0x00, 0xdd, 0x87, 0x7a, 0x15, 0xee, 0x64, 0x41, 0x0d, 0xa8, 0x8c, 0x35, 0xd1, 0xa1, 0x32, 0x84,
	0xff, 0x7e, 0xfc, 0x96, 0x72, 0xad, 0x42, 0xee, 0x35, 0x1c, 0x0d, 0xb8, 0x5a, 0x72, 0xa5, 0xfa,
	0x53, 0x21, 0xd7, 0x4b, 0xb2, 0x40, 0x75, 0xb0, 0x3c, 0x1a, 0x77, 0x64, 0x79, 0x34, 0xaf, 0x97,
	0xde, 0x97, 0x05, 0x87, 0x3b, 0x49, 0x5e, 0xe0, 0x22, 0x53, 0x94, 0x1b, 0x79, 0xb4, 0x2f, 0xe8,
	0x8f, 0xfc, 0x51, 0xb1, 0x80, 0x28, 0x86, 0x5a, 0x38, 0x3e, 0x21, 0xce, 0x1e, 0xc9, 0x3e, 0x4b,
	0x57, 0xfb, 0x9f, 0xe9, 0xfc, 0x43, 0x93, 0xfd, 0x0e, 0x13, 0x68, 0x3b, 0x75, 0xfe, 0xd2, 0x72,
	0x11, 0xfb, 0x19, 0xec, 0x21, 0xd3, 0x77, 0x5c, 0xe9, 0x3c, 0xfc, 0x79, 0x6a, 0xce, 0xff, 0x11,
	0x8a, 0xe8, 0x0f, 0xd0, 0xc8, 0x14, 0x9c, 0x90, 0x9b, 0xa9, 0x31, 0x23, 0x28, 0x40, 0xba, 0xb5,
	0x49, 0x15, 0xdf, 0xc4, 0x8a, 0x69, 0xc5, 0x1c, 0xf5, 0xea, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x06,
	0x49, 0xae, 0xa5, 0x3a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationClient is the client API for Notification service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationClient interface {
	GetNotificationByIdAndImeiUsecase(ctx context.Context, in *NotificationByID, opts ...grpc.CallOption) (*OutputNotification, error)
	SendNotificationUsecase(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*OutputNotification, error)
	GetListNotificationUsecase(ctx context.Context, in *GetNotificationRequest, opts ...grpc.CallOption) (*OutputNotification, error)
	DismissAbnormalUsecase(ctx context.Context, in *DismissAbnormal, opts ...grpc.CallOption) (*OutputNotification, error)
}

type notificationClient struct {
	cc *grpc.ClientConn
}

func NewNotificationClient(cc *grpc.ClientConn) NotificationClient {
	return &notificationClient{cc}
}

func (c *notificationClient) GetNotificationByIdAndImeiUsecase(ctx context.Context, in *NotificationByID, opts ...grpc.CallOption) (*OutputNotification, error) {
	out := new(OutputNotification)
	err := c.cc.Invoke(ctx, "/packets.Notification/GetNotificationByIdAndImeiUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) SendNotificationUsecase(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*OutputNotification, error) {
	out := new(OutputNotification)
	err := c.cc.Invoke(ctx, "/packets.Notification/SendNotificationUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) GetListNotificationUsecase(ctx context.Context, in *GetNotificationRequest, opts ...grpc.CallOption) (*OutputNotification, error) {
	out := new(OutputNotification)
	err := c.cc.Invoke(ctx, "/packets.Notification/GetListNotificationUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationClient) DismissAbnormalUsecase(ctx context.Context, in *DismissAbnormal, opts ...grpc.CallOption) (*OutputNotification, error) {
	out := new(OutputNotification)
	err := c.cc.Invoke(ctx, "/packets.Notification/DismissAbnormalUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationServer is the server API for Notification service.
type NotificationServer interface {
	GetNotificationByIdAndImeiUsecase(context.Context, *NotificationByID) (*OutputNotification, error)
	SendNotificationUsecase(context.Context, *SendNotificationRequest) (*OutputNotification, error)
	GetListNotificationUsecase(context.Context, *GetNotificationRequest) (*OutputNotification, error)
	DismissAbnormalUsecase(context.Context, *DismissAbnormal) (*OutputNotification, error)
}

// UnimplementedNotificationServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationServer struct {
}

func (*UnimplementedNotificationServer) GetNotificationByIdAndImeiUsecase(ctx context.Context, req *NotificationByID) (*OutputNotification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNotificationByIdAndImeiUsecase not implemented")
}
func (*UnimplementedNotificationServer) SendNotificationUsecase(ctx context.Context, req *SendNotificationRequest) (*OutputNotification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendNotificationUsecase not implemented")
}
func (*UnimplementedNotificationServer) GetListNotificationUsecase(ctx context.Context, req *GetNotificationRequest) (*OutputNotification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListNotificationUsecase not implemented")
}
func (*UnimplementedNotificationServer) DismissAbnormalUsecase(ctx context.Context, req *DismissAbnormal) (*OutputNotification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DismissAbnormalUsecase not implemented")
}

func RegisterNotificationServer(s *grpc.Server, srv NotificationServer) {
	s.RegisterService(&_Notification_serviceDesc, srv)
}

func _Notification_GetNotificationByIdAndImeiUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotificationByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServer).GetNotificationByIdAndImeiUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Notification/GetNotificationByIdAndImeiUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServer).GetNotificationByIdAndImeiUsecase(ctx, req.(*NotificationByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notification_SendNotificationUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServer).SendNotificationUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Notification/SendNotificationUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServer).SendNotificationUsecase(ctx, req.(*SendNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notification_GetListNotificationUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServer).GetListNotificationUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Notification/GetListNotificationUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServer).GetListNotificationUsecase(ctx, req.(*GetNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notification_DismissAbnormalUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DismissAbnormal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServer).DismissAbnormalUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Notification/DismissAbnormalUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServer).DismissAbnormalUsecase(ctx, req.(*DismissAbnormal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notification_serviceDesc = grpc.ServiceDesc{
	ServiceName: "packets.Notification",
	HandlerType: (*NotificationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNotificationByIdAndImeiUsecase",
			Handler:    _Notification_GetNotificationByIdAndImeiUsecase_Handler,
		},
		{
			MethodName: "SendNotificationUsecase",
			Handler:    _Notification_SendNotificationUsecase_Handler,
		},
		{
			MethodName: "GetListNotificationUsecase",
			Handler:    _Notification_GetListNotificationUsecase_Handler,
		},
		{
			MethodName: "DismissAbnormalUsecase",
			Handler:    _Notification_DismissAbnormalUsecase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vehicle_notification.proto",
}
